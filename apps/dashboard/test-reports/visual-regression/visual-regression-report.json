{
  "timestamp": "2025-08-04T08:07:19.036Z",
  "totalSuites": 4,
  "totalTests": 4,
  "passedTests": 0,
  "failedTests": 4,
  "skippedTests": 0,
  "totalDuration": 38375,
  "results": [
    {
      "suite": "Visual Regression Core",
      "passed": 0,
      "failed": 1,
      "skipped": 0,
      "duration": 15187,
      "errors": [
        "Command failed: npx jest --testPathPattern=visual-regression.test.ts --timeout=30000 --verbose --no-cache --forceExit --maxWorkers=1 --json --outputFile=/Users/loic/develop/kiro/apps/dashboard/test-reports/visual-regression/visual-regression-core-results.json\n\u001b[0m\u001b[7m\u001b[1m\u001b[31m FAIL \u001b[39m\u001b[22m\u001b[27m\u001b[0m \u001b[2msrc/components/CodeArchaeology/__tests__/\u001b[22m\u001b[1mvisual-regression.test.ts\u001b[22m\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n\n      \u001b[31mx\u001b[0m Expected '>', got 'artifacts'\n         ,-[\u001b[36;1;4m/Users/loic/develop/kiro/apps/dashboard/src/components/CodeArchaeology/__tests__/visual-regression.test.ts\u001b[0m:370:1]\n     \u001b[2m370\u001b[0m |     it('should maintain consistent 3D scene rendering', async () => {\n     \u001b[2m371\u001b[0m |       const { container } = render(\n     \u001b[2m372\u001b[0m |         <Scene3D\n     \u001b[2m373\u001b[0m |           artifacts={mockCodeArtifacts}\n         : \u001b[31;1m          ^^^^^^^^^\u001b[0m\n     \u001b[2m374\u001b[0m |           width={800}\n     \u001b[2m375\u001b[0m |           height={600}\n     \u001b[2m376\u001b[0m |           onArtifactSelect={jest.fn()}\n         `----\n\n\n    Caused by:\n        Syntax Error\n\n      \u001b[2mat Object.transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1291:25)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1410:19)\u001b[22m\n      \u001b[2mat Object.process (\u001b[22m../../node_modules/next/src/build/swc/jest-transformer.ts\u001b[2m:103:25)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n\n\u001b[0m\u001b[7m\u001b[1m\u001b[31m FAIL \u001b[39m\u001b[22m\u001b[27m\u001b[0m \u001b[2msrc/components/CodeArchaeology/__tests__/\u001b[22m\u001b[1mvisual-regression.test.tsx\u001b[22m\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n\n      \u001b[31mx\u001b[0m Expected ';', '}' or <eof>\n         ,-[\u001b[36;1;4m/Users/loic/develop/kiro/apps/dashboard/src/components/CodeArchaeology/__tests__/visual-regression.test.tsx\u001b[0m:112:1]\n     \u001b[2m112\u001b[0m |     };\n     \u001b[2m113\u001b[0m |   }\n     \u001b[2m114\u001b[0m | }// Mo\n     \u001b[2m115\u001b[0m | ck artifacts for testing\n         : \u001b[31;1m^|\u001b[0m\u001b[33;1m ^^^^^^^^^\u001b[0m\n         :  \u001b[31;1m`-- \u001b[31;1mThis is the expression part of an expression statement\u001b[0m\u001b[0m\n     \u001b[2m116\u001b[0m | const mockArtifacts: CodeArtifact[] = [\n     \u001b[2m117\u001b[0m |   {\n     \u001b[2m118\u001b[0m |     id: 'file1',\n         `----\n\n\n    Caused by:\n        Syntax Error\n\n      \u001b[2mat Object.transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1291:25)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1410:19)\u001b[22m\n      \u001b[2mat Object.process (\u001b[22m../../node_modules/next/src/build/swc/jest-transformer.ts\u001b[2m:103:25)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n\n\u001b[1mTest Suites: \u001b[22m\u001b[1m\u001b[31m2 failed\u001b[39m\u001b[22m, 2 total\n\u001b[1mTests:       \u001b[22m0 total\n\u001b[1mSnapshots:   \u001b[22m0 total\n\u001b[1mTime:\u001b[22m        0.92 s\n\u001b[2mRan all test suites\u001b[22m\u001b[2m matching \u001b[22m/visual-regression.test.ts/i\u001b[2m.\u001b[22m\nTest results written to: test-reports/visual-regression/visual-regression-core-results.json\n\u001b[1mForce exiting Jest: \u001b[22mHave you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?\n"
      ],
      "screenshots": []
    },
    {
      "suite": "Animation Accuracy",
      "passed": 0,
      "failed": 1,
      "skipped": 0,
      "duration": 4573,
      "errors": [
        "Command failed: npx jest --testPathPattern=animation-accuracy.test.ts --timeout=45000 --verbose --no-cache --forceExit --maxWorkers=1 --json --outputFile=/Users/loic/develop/kiro/apps/dashboard/test-reports/visual-regression/animation-accuracy-results.json\n\u001b[0m\u001b[7m\u001b[1m\u001b[31m FAIL \u001b[39m\u001b[22m\u001b[27m\u001b[0m \u001b[2msrc/components/CodeArchaeology/__tests__/\u001b[22m\u001b[1manimation-accuracy.test.ts\u001b[22m\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n\n      \u001b[31mx\u001b[0m Expected '>', got 'animations'\n         ,-[\u001b[36;1;4m/Users/loic/develop/kiro/apps/dashboard/src/components/CodeArchaeology/__tests__/animation-accuracy.test.ts\u001b[0m:313:1]\n     \u001b[2m313\u001b[0m |     it('should handle smooth transitions between time periods', async () => {\n     \u001b[2m314\u001b[0m |       const { container } = render(\n     \u001b[2m315\u001b[0m |         <TemporalVisualization\n     \u001b[2m316\u001b[0m |           animations={[createTestAnimationSequence('smooth-transition', 1000)]}\n         : \u001b[31;1m          ^^^^^^^^^^\u001b[0m\n     \u001b[2m317\u001b[0m |           currentTime={new Date('2023-01-01')}\n     \u001b[2m318\u001b[0m |           onTimeChange={jest.fn()}\n     \u001b[2m319\u001b[0m |           width={800}\n         `----\n\n\n    Caused by:\n        Syntax Error\n\n      \u001b[2mat Object.transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1291:25)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1410:19)\u001b[22m\n      \u001b[2mat Object.process (\u001b[22m../../node_modules/next/src/build/swc/jest-transformer.ts\u001b[2m:103:25)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n\n\u001b[1mTest Suites: \u001b[22m\u001b[1m\u001b[31m1 failed\u001b[39m\u001b[22m, 1 total\n\u001b[1mTests:       \u001b[22m0 total\n\u001b[1mSnapshots:   \u001b[22m0 total\n\u001b[1mTime:\u001b[22m        0.556 s\n\u001b[2mRan all test suites\u001b[22m\u001b[2m matching \u001b[22m/animation-accuracy.test.ts/i\u001b[2m.\u001b[22m\nTest results written to: test-reports/visual-regression/animation-accuracy-results.json\n\u001b[1mForce exiting Jest: \u001b[22mHave you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?\n"
      ],
      "screenshots": []
    },
    {
      "suite": "Cross-Browser WebGL",
      "passed": 0,
      "failed": 1,
      "skipped": 0,
      "duration": 13783,
      "errors": [
        "Command failed: npx jest --testPathPattern=cross-browser-webgl.test.ts --timeout=60000 --verbose --no-cache --forceExit --maxWorkers=4 --json --outputFile=/Users/loic/develop/kiro/apps/dashboard/test-reports/visual-regression/cross-browser-webgl-results.json\n\u001b[0m\u001b[7m\u001b[1m\u001b[31m FAIL \u001b[39m\u001b[22m\u001b[27m\u001b[0m \u001b[2msrc/components/CodeArchaeology/__tests__/\u001b[22m\u001b[1mcross-browser-webgl.test.ts\u001b[22m\n  Cross-Browser WebGL Compatibility\n    Chrome Browser Compatibility\n      \u001b[31m✕\u001b[39m \u001b[2mshould detect Chrome desktop correctly (2 ms)\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould detect Chrome mobile correctly (1 ms)\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould provide Chrome-specific optimizations\u001b[22m\n    Firefox Browser Compatibility\n      \u001b[32m✓\u001b[39m \u001b[2mshould detect Firefox desktop correctly (1 ms)\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould provide Firefox-specific workarounds\u001b[22m\n    Safari Browser Compatibility\n      \u001b[32m✓\u001b[39m \u001b[2mshould detect Safari desktop correctly\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould handle Safari iOS limitations (1 ms)\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould provide Safari-specific workarounds\u001b[22m\n    Edge Browser Compatibility\n      \u001b[31m✕\u001b[39m \u001b[2mshould detect modern Edge correctly (1 ms)\u001b[22m\n    Opera Browser Compatibility\n      \u001b[31m✕\u001b[39m \u001b[2mshould detect Opera correctly (1 ms)\u001b[22m\n    Hardware Profile Compatibility\n      \u001b[31m✕\u001b[39m \u001b[2mshould optimize for high-end hardware\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould adapt for mid-range hardware (1 ms)\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould provide fallback for low-end hardware\u001b[22m\n      \u001b[31m✕\u001b[39m \u001b[2mshould recommend fallback for very limited hardware\u001b[22m\n    WebGL Context Creation\n      \u001b[32m✓\u001b[39m \u001b[2mshould create optimal context for each browser (2 ms)\u001b[22m\n      \u001b[32m✓\u001b[39m \u001b[2mshould handle WebGL context creation failures gracefully\u001b[22m\n    Performance Adaptation\n      \u001b[31m✕\u001b[39m \u001b[2mshould adjust quality settings based on browser performance\u001b[22m\n    Fallback Integration\n      \u001b[32m✓\u001b[39m \u001b[2mshould seamlessly integrate with fallback renderer (4 ms)\u001b[22m\n  WebGL Extension Compatibility\n    \u001b[31m✕\u001b[39m \u001b[2mshould handle OES_texture_float extension (Float texture support)\u001b[22m\n    \u001b[31m✕\u001b[39m \u001b[2mshould handle ANGLE_instanced_arrays extension (Instanced rendering support)\u001b[22m\n    \u001b[31m✕\u001b[39m \u001b[2mshould handle OES_vertex_array_object extension (Vertex Array Object support)\u001b[22m\n    \u001b[31m✕\u001b[39m \u001b[2mshould handle WEBGL_draw_buffers extension (Multiple render targets)\u001b[22m\n    \u001b[31m✕\u001b[39m \u001b[2mshould handle EXT_texture_filter_anisotropic extension (Anisotropic filtering)\u001b[22m\n  Mobile Device Compatibility\n    \u001b[32m✓\u001b[39m \u001b[2mshould handle iPhone device limitations (1 ms)\u001b[22m\n    \u001b[32m✓\u001b[39m \u001b[2mshould handle Android Chrome device limitations\u001b[22m\n    \u001b[32m✓\u001b[39m \u001b[2mshould recommend appropriate fallback for mobile devices\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCross-Browser WebGL Compatibility › Chrome Browser Compatibility › should detect Chrome desktop correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0.7\u001b[39m\n    Received:   \u001b[31m0.6\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 243 |\u001b[39m       expect(report\u001b[33m.\u001b[39mbrowserInfo\u001b[33m.\u001b[39mengine)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Blink'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 244 |\u001b[39m       expect(report\u001b[33m.\u001b[39mbrowserInfo\u001b[33m.\u001b[39misMobile)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 245 |\u001b[39m       expect(report\u001b[33m.\u001b[39mperformanceScore)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.7\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 246 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 247 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 248 |\u001b[39m     it(\u001b[32m'should detect Chrome mobile correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:245:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCross-Browser WebGL Compatibility › Edge Browser Compatibility › should detect modern Edge correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0.6\u001b[39m\n    Received:   \u001b[31m0.5700000000000001\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 349 |\u001b[39m       expect(report\u001b[33m.\u001b[39mbrowserInfo\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Edge'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 350 |\u001b[39m       expect(report\u001b[33m.\u001b[39mbrowserInfo\u001b[33m.\u001b[39mengine)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Blink'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 351 |\u001b[39m       expect(report\u001b[33m.\u001b[39mperformanceScore)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.6\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 352 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 353 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 354 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:351:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCross-Browser WebGL Compatibility › Opera Browser Compatibility › should detect Opera correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"Opera\"\u001b[39m\n    Received: \u001b[31m\"Chrome\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 361 |\u001b[39m       \u001b[36mconst\u001b[39m report \u001b[33m=\u001b[39m compatibility\u001b[33m.\u001b[39mgenerateReport()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 362 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 363 |\u001b[39m       expect(report\u001b[33m.\u001b[39mbrowserInfo\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Opera'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 364 |\u001b[39m       expect(report\u001b[33m.\u001b[39mbrowserInfo\u001b[33m.\u001b[39mengine)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Blink'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 365 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 366 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:363:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCross-Browser WebGL Compatibility › Hardware Profile Compatibility › should optimize for high-end hardware\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0.8\u001b[39m\n    Received:   \u001b[31m0.6\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 374 |\u001b[39m       \u001b[36mconst\u001b[39m report \u001b[33m=\u001b[39m compatibility\u001b[33m.\u001b[39mgenerateReport()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 375 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 376 |\u001b[39m       expect(report\u001b[33m.\u001b[39mperformanceScore)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.8\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 377 |\u001b[39m       expect(report\u001b[33m.\u001b[39mrecommendedSettings\u001b[33m.\u001b[39mmaxTextureSize)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m2048\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 378 |\u001b[39m       expect(report\u001b[33m.\u001b[39mrecommendedSettings\u001b[33m.\u001b[39mantialias)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 379 |\u001b[39m       expect(report\u001b[33m.\u001b[39mrecommendedSettings\u001b[33m.\u001b[39mpixelRatio)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m1.0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:376:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCross-Browser WebGL Compatibility › Hardware Profile Compatibility › should recommend fallback for very limited hardware\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 410 |\u001b[39m       \u001b[36mconst\u001b[39m compatibility \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWebGLCompatibility\u001b[39m()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 411 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 412 |\u001b[39m       expect(compatibility\u001b[33m.\u001b[39mshouldDisableWebGL())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 413 |\u001b[39m       expect(compatibility\u001b[33m.\u001b[39mgetFallbackMode())\u001b[33m.\u001b[39mtoBe(\u001b[32m'canvas2d'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 414 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 415 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:412:50)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCross-Browser WebGL Compatibility › Performance Adaptation › should adjust quality settings based on browser performance\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0.7\u001b[39m\n    Received:   \u001b[31m0.6\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 481 |\u001b[39m         \u001b[90m// The quality level should be appropriate for the hardware\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 482 |\u001b[39m         \u001b[36mif\u001b[39m (expectedQuality \u001b[33m===\u001b[39m \u001b[32m'ultra'\u001b[39m) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 483 |\u001b[39m           expect(report\u001b[33m.\u001b[39mperformanceScore)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.7\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 484 |\u001b[39m         } \u001b[36melse\u001b[39m \u001b[36mif\u001b[39m (expectedQuality \u001b[33m===\u001b[39m \u001b[32m'high'\u001b[39m) {\u001b[22m\n\u001b[2m     \u001b[90m 485 |\u001b[39m           expect(report\u001b[33m.\u001b[39mperformanceScore)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.5\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 486 |\u001b[39m         } \u001b[36melse\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toBeGreaterThan (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:483:43)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat Object.forEach (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:474:17)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWebGL Extension Compatibility › should handle OES_texture_float extension (Float texture support)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 562 |\u001b[39m       \u001b[90m// Check that the extension is detected\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 563 |\u001b[39m       \u001b[36mconst\u001b[39m supportKey \u001b[33m=\u001b[39m name\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m.\u001b[39mreplace(\u001b[35m/[^a-z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 564 |\u001b[39m       expect(support[supportKey \u001b[36mas\u001b[39m keyof \u001b[36mtypeof\u001b[39m support])\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 565 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 566 |\u001b[39m       \u001b[90m// Test without extension\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 567 |\u001b[39m       \u001b[36mconst\u001b[39m withoutExtension \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39m\u001b[33mHARDWARE_PROFILES\u001b[39m\u001b[33m.\u001b[39mmidRange }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:564:59)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWebGL Extension Compatibility › should handle ANGLE_instanced_arrays extension (Instanced rendering support)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 562 |\u001b[39m       \u001b[90m// Check that the extension is detected\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 563 |\u001b[39m       \u001b[36mconst\u001b[39m supportKey \u001b[33m=\u001b[39m name\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m.\u001b[39mreplace(\u001b[35m/[^a-z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 564 |\u001b[39m       expect(support[supportKey \u001b[36mas\u001b[39m keyof \u001b[36mtypeof\u001b[39m support])\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 565 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 566 |\u001b[39m       \u001b[90m// Test without extension\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 567 |\u001b[39m       \u001b[36mconst\u001b[39m withoutExtension \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39m\u001b[33mHARDWARE_PROFILES\u001b[39m\u001b[33m.\u001b[39mmidRange }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:564:59)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWebGL Extension Compatibility › should handle OES_vertex_array_object extension (Vertex Array Object support)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 562 |\u001b[39m       \u001b[90m// Check that the extension is detected\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 563 |\u001b[39m       \u001b[36mconst\u001b[39m supportKey \u001b[33m=\u001b[39m name\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m.\u001b[39mreplace(\u001b[35m/[^a-z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 564 |\u001b[39m       expect(support[supportKey \u001b[36mas\u001b[39m keyof \u001b[36mtypeof\u001b[39m support])\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 565 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 566 |\u001b[39m       \u001b[90m// Test without extension\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 567 |\u001b[39m       \u001b[36mconst\u001b[39m withoutExtension \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39m\u001b[33mHARDWARE_PROFILES\u001b[39m\u001b[33m.\u001b[39mmidRange }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:564:59)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWebGL Extension Compatibility › should handle WEBGL_draw_buffers extension (Multiple render targets)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 562 |\u001b[39m       \u001b[90m// Check that the extension is detected\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 563 |\u001b[39m       \u001b[36mconst\u001b[39m supportKey \u001b[33m=\u001b[39m name\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m.\u001b[39mreplace(\u001b[35m/[^a-z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 564 |\u001b[39m       expect(support[supportKey \u001b[36mas\u001b[39m keyof \u001b[36mtypeof\u001b[39m support])\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 565 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 566 |\u001b[39m       \u001b[90m// Test without extension\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 567 |\u001b[39m       \u001b[36mconst\u001b[39m withoutExtension \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39m\u001b[33mHARDWARE_PROFILES\u001b[39m\u001b[33m.\u001b[39mmidRange }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:564:59)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWebGL Extension Compatibility › should handle EXT_texture_filter_anisotropic extension (Anisotropic filtering)\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 562 |\u001b[39m       \u001b[90m// Check that the extension is detected\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 563 |\u001b[39m       \u001b[36mconst\u001b[39m supportKey \u001b[33m=\u001b[39m name\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m.\u001b[39mreplace(\u001b[35m/[^a-z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 564 |\u001b[39m       expect(support[supportKey \u001b[36mas\u001b[39m keyof \u001b[36mtypeof\u001b[39m support])\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 565 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 566 |\u001b[39m       \u001b[90m// Test without extension\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 567 |\u001b[39m       \u001b[36mconst\u001b[39m withoutExtension \u001b[33m=\u001b[39m { \u001b[33m...\u001b[39m\u001b[33mHARDWARE_PROFILES\u001b[39m\u001b[33m.\u001b[39mmidRange }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/components/CodeArchaeology/__tests__/cross-browser-webgl.test.ts\u001b[39m\u001b[0m\u001b[2m:564:59)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1mTest Suites: \u001b[22m\u001b[1m\u001b[31m1 failed\u001b[39m\u001b[22m, 1 total\n\u001b[1mTests:       \u001b[22m\u001b[1m\u001b[31m11 failed\u001b[39m\u001b[22m, \u001b[1m\u001b[32m15 passed\u001b[39m\u001b[22m, 26 total\n\u001b[1mSnapshots:   \u001b[22m0 total\n\u001b[1mTime:\u001b[22m        0.999 s\n\u001b[2mRan all test suites\u001b[22m\u001b[2m matching \u001b[22m/cross-browser-webgl.test.ts/i\u001b[2m.\u001b[22m\nTest results written to: test-reports/visual-regression/cross-browser-webgl-results.json\n\u001b[1mForce exiting Jest: \u001b[22mHave you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?\n"
      ],
      "screenshots": []
    },
    {
      "suite": "Accessibility 3D",
      "passed": 0,
      "failed": 1,
      "skipped": 0,
      "duration": 4829,
      "errors": [
        "Command failed: npx jest --testPathPattern=accessibility-3d.test.ts --timeout=40000 --verbose --no-cache --forceExit --maxWorkers=1 --json --outputFile=/Users/loic/develop/kiro/apps/dashboard/test-reports/visual-regression/accessibility-3d-results.json\n\u001b[0m\u001b[7m\u001b[1m\u001b[31m FAIL \u001b[39m\u001b[22m\u001b[27m\u001b[0m \u001b[2msrc/components/CodeArchaeology/__tests__/\u001b[22m\u001b[1maccessibility-3d.test.ts\u001b[22m\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n\n      \u001b[31mx\u001b[0m Expected '>', got 'artifacts'\n         ,-[\u001b[36;1;4m/Users/loic/develop/kiro/apps/dashboard/src/components/CodeArchaeology/__tests__/accessibility-3d.test.ts\u001b[0m:385:1]\n     \u001b[2m385\u001b[0m |       \n     \u001b[2m386\u001b[0m |       const { container } = render(\n     \u001b[2m387\u001b[0m |         <Scene3D\n     \u001b[2m388\u001b[0m |           artifacts={mockCodeArtifacts}\n         : \u001b[31;1m          ^^^^^^^^^\u001b[0m\n     \u001b[2m389\u001b[0m |           width={800}\n     \u001b[2m390\u001b[0m |           height={600}\n     \u001b[2m391\u001b[0m |           onArtifactSelect={onArtifactSelect}\n         `----\n\n\n    Caused by:\n        Syntax Error\n\n      \u001b[2mat Object.transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1291:25)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22m../../node_modules/next/src/build/swc/index.ts\u001b[2m:1410:19)\u001b[22m\n      \u001b[2mat Object.process (\u001b[22m../../node_modules/next/src/build/swc/jest-transformer.ts\u001b[2m:103:25)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22m../../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n\n\u001b[1mTest Suites: \u001b[22m\u001b[1m\u001b[31m1 failed\u001b[39m\u001b[22m, 1 total\n\u001b[1mTests:       \u001b[22m0 total\n\u001b[1mSnapshots:   \u001b[22m0 total\n\u001b[1mTime:\u001b[22m        0.76 s\n\u001b[2mRan all test suites\u001b[22m\u001b[2m matching \u001b[22m/accessibility-3d.test.ts/i\u001b[2m.\u001b[22m\nTest results written to: test-reports/visual-regression/accessibility-3d-results.json\n\u001b[1mForce exiting Jest: \u001b[22mHave you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?\n"
      ],
      "screenshots": []
    }
  ],
  "summary": {
    "screenshotComparisons": 1,
    "animationTests": 1,
    "crossBrowserTests": 1,
    "accessibilityTests": 1,
    "performanceTests": 0
  }
}