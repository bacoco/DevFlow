version: '3.8'

services:
  # Infrastructure Services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: devflow
      MONGO_INITDB_ROOT_PASSWORD: devflow123
    volumes:
      - mongodb_data:/data/db

  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: devflow
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin123
    volumes:
      - influxdb_data:/var/lib/influxdb2

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Application Services
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URL: mongodb://devflow:devflow123@mongodb:27017/devflow
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka
    volumes:
      - ./services/api-gateway/src:/app/src

  data-ingestion:
    build:
      context: ./services/data-ingestion
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      KAFKA_BROKERS: kafka:9092
      MONGODB_URL: mongodb://devflow:devflow123@mongodb:27017/devflow
    depends_on:
      - kafka
      - mongodb
    volumes:
      - ./services/data-ingestion/src:/app/src

  stream-processing:
    build:
      context: ./services/stream-processing
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      KAFKA_BROKERS: kafka:9092
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: admin-token
      MONGODB_URL: mongodb://devflow:devflow123@mongodb:27017/devflow
      REDIS_URL: redis://redis:6379
    depends_on:
      - kafka
      - influxdb
      - mongodb
      - redis
    volumes:
      - ./services/stream-processing/src:/app/src

  ml-pipeline:
    build:
      context: ./services/ml-pipeline
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      MONGODB_URL: mongodb://devflow:devflow123@mongodb:27017/devflow
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka
    volumes:
      - ./services/ml-pipeline/src:/app/src

  dashboard:
    build:
      context: ./apps/dashboard
      dockerfile: Dockerfile
    ports:
      - "3010:3010"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NEXT_PUBLIC_WS_URL: ws://localhost:3000
    depends_on:
      - api-gateway
    volumes:
      - ./apps/dashboard/src:/app/src

volumes:
  mongodb_data:
  influxdb_data:
  redis_data: