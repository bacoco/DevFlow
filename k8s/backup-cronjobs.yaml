apiVersion: batch/v1
kind: CronJob
metadata:
  name: daily-backup
  namespace: devflow-production
  labels:
    app: backup-manager
    type: daily
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM UTC
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 7200  # 2 hours timeout
      template:
        metadata:
          labels:
            app: backup-manager
            type: daily
        spec:
          restartPolicy: Never
          serviceAccountName: backup-service-account
          containers:
          - name: backup-manager
            image: ghcr.io/devflow/backup-manager:latest
            env:
            - name: BACKUP_TYPE
              value: "full"
            - name: BACKUP_SCHEDULE
              value: "daily"
            - name: NODE_ENV
              value: "production"
            - name: MONGODB_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: mongodb-url
            - name: INFLUXDB_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-url
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-token
            - name: INFLUXDB_ORG
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-org
            - name: INFLUXDB_BUCKET
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-bucket
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: redis-url
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-secret-access-key
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-region
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: s3-bucket
            - name: ENCRYPTION_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: encryption-key-id
            resources:
              requests:
                cpu: 500m
                memory: 1Gi
              limits:
                cpu: 2000m
                memory: 4Gi
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false  # Needs write access for temporary files
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: backup-temp
              mountPath: /tmp
            - name: backup-logs
              mountPath: /app/logs
          volumes:
          - name: backup-temp
            emptyDir:
              sizeLimit: 10Gi
          - name: backup-logs
            persistentVolumeClaim:
              claimName: backup-logs-pvc

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hourly-incremental-backup
  namespace: devflow-production
  labels:
    app: backup-manager
    type: incremental
spec:
  schedule: "0 * * * *"  # Every hour
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 24
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 1800  # 30 minutes timeout
      template:
        metadata:
          labels:
            app: backup-manager
            type: incremental
        spec:
          restartPolicy: Never
          serviceAccountName: backup-service-account
          containers:
          - name: backup-manager
            image: ghcr.io/devflow/backup-manager:latest
            env:
            - name: BACKUP_TYPE
              value: "incremental"
            - name: BACKUP_SCHEDULE
              value: "hourly"
            - name: NODE_ENV
              value: "production"
            - name: MONGODB_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: mongodb-url
            - name: INFLUXDB_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-url
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-token
            - name: INFLUXDB_ORG
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-org
            - name: INFLUXDB_BUCKET
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-bucket
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: redis-url
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-secret-access-key
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-region
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: s3-bucket
            - name: ENCRYPTION_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: encryption-key-id
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 1000m
                memory: 2Gi
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: backup-temp
              mountPath: /tmp
            - name: backup-logs
              mountPath: /app/logs
          volumes:
          - name: backup-temp
            emptyDir:
              sizeLimit: 2Gi
          - name: backup-logs
            persistentVolumeClaim:
              claimName: backup-logs-pvc

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: weekly-backup-cleanup
  namespace: devflow-production
  labels:
    app: backup-manager
    type: cleanup
spec:
  schedule: "0 3 * * 0"  # Weekly on Sunday at 3 AM UTC
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 4
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 3600  # 1 hour timeout
      template:
        metadata:
          labels:
            app: backup-manager
            type: cleanup
        spec:
          restartPolicy: Never
          serviceAccountName: backup-service-account
          containers:
          - name: backup-cleanup
            image: ghcr.io/devflow/backup-manager:latest
            command: ["node", "dist/cleanup.js"]
            env:
            - name: CLEANUP_TYPE
              value: "retention"
            - name: NODE_ENV
              value: "production"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-secret-access-key
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-region
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: s3-bucket
            - name: RETENTION_DAILY
              value: "7"
            - name: RETENTION_WEEKLY
              value: "4"
            - name: RETENTION_MONTHLY
              value: "12"
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: backup-logs
              mountPath: /app/logs
          volumes:
          - name: backup-logs
            persistentVolumeClaim:
              claimName: backup-logs-pvc

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: disaster-recovery-test
  namespace: devflow-production
  labels:
    app: disaster-recovery
    type: test
spec:
  schedule: "0 4 1 * *"  # Monthly on the 1st at 4 AM UTC
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 10800  # 3 hours timeout
      template:
        metadata:
          labels:
            app: disaster-recovery
            type: test
        spec:
          restartPolicy: Never
          serviceAccountName: disaster-recovery-service-account
          containers:
          - name: dr-test
            image: ghcr.io/devflow/disaster-recovery:latest
            command: ["node", "dist/dr-test.js"]
            env:
            - name: TEST_TYPE
              value: "comprehensive"
            - name: NODE_ENV
              value: "production"
            - name: MONGODB_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: mongodb-url
            - name: INFLUXDB_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-url
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: influxdb-token
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: redis-url
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-secrets
                  key: aws-secret-access-key
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: notification-secrets
                  key: slack-webhook-url
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 1000m
                memory: 2Gi
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: dr-test-logs
              mountPath: /app/logs
          volumes:
          - name: dr-test-logs
            persistentVolumeClaim:
              claimName: dr-test-logs-pvc

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-service-account
  namespace: devflow-production
  labels:
    app: backup-manager

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: disaster-recovery-service-account
  namespace: devflow-production
  labels:
    app: disaster-recovery

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backup-manager-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "persistentvolumes", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backup-manager-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backup-manager-role
subjects:
- kind: ServiceAccount
  name: backup-service-account
  namespace: devflow-production

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: disaster-recovery-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "persistentvolumes", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: disaster-recovery-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: disaster-recovery-role
subjects:
- kind: ServiceAccount
  name: disaster-recovery-service-account
  namespace: devflow-production

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-logs-pvc
  namespace: devflow-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dr-test-logs-pvc
  namespace: devflow-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: fast-ssd